install.packages("swirl")
install.packages("stringi")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
print.trellis()
?print.trellis()
>splom()
?splom()
?trellis.par.set()
trellis.par.set()
?trellis.par.set()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
str(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?legend
?cat
setwd("~/Data_Science_Courses/5 Reproducible Research/RepData_PeerAssessment1")
activity <- read.csv("activity.csv",header = TRUE, sep = ",")
activity$newdate <- as.Date(activity$date)
dim(activity)
library(plyr)
interval.step.median.across.days <- ddply(activity, .(interval), summarize, median = median(steps, na.rm = TRUE))
interval.step.median.across.days
library(plyr)
interval.step.median.across.days <- ddply(activity, .(interval), summarize, median = median(steps, na.rm = TRUE))
steps.narm <- vector()
for (i in 1:dim(activity)[1]) {
if (is.na(activity$steps[i])) {
steps.narm <- interval.step.median.across.days$median[interval.step.median.across.days$interval == activity$interval[i]])
}
steps.narm <- vector()
for (i in 1:dim(activity)[1]) {
if (is.na(activity$steps[i])) {
steps.narm <- interval.step.median.across.days$median[interval.step.median.across.days$interval == activity$interval[i]]
} else {steps.narm <- activity$steps[i]}
}
activity.narm <- data.frame(steps = steps.narm, date = activity$newdate, interval = activity$interval)
library(plyr)
interval.step.mean.across.days.narm <- ddply(activity.narm, .(interval), summarize, mean = mean(steps))
interval.step.mean.across.days.narm
class(activity.narm$date)
steps.narm <- vector()
for (i in 1:dim(activity)[1]) {
if (is.na(activity$steps[i])) {
steps.narm[i] <- interval.step.median.across.days$median[interval.step.median.across.days$interval == activity$interval[i]]
} else {steps.narm[i] <- activity$steps[i]}
}
activity.narm <- data.frame(steps = steps.narm, date = activity$newdate, interval = activity$interval)
stepsperday.narm <- as.vector(tapply(activity.narm$steps, activity.narm$date, sum))
hist(stepsperday.narm, main="Histogram of Total Number of Steps per Day (NA remuved)",  xlab="Steps per Day", col="red")
xyplot(activity.narm$mean ~ activity.narm$interval | activity.narm$daytype, data = interval.step.mean.across.days.narm, layout = c(1,2))
library(lattice)
xyplot(activity.narm$mean ~ activity.narm$interval | activity.narm$daytype, data = interval.step.mean.across.days.narm, layout = c(1,2))
interval.step.mean.across.days.narm
xyplot(activity.narm$steps ~ activity.narm$interval | activity.narm$daytype, data = activity.narm, layout = c(1,2))
head(activity.narm)
activity.narm$daychar <- weekdays(activity.narm$date, abbreviate = TRUE)
activity.narm$daytype[activity.narm$daychar=="Mon"] <- "weekday"
activity.narm$daytype[activity.narm$daychar=="Tue"] <- "weekday"
activity.narm$daytype[activity.narm$daychar=="Wed"] <- "weekday"
activity.narm$daytype[activity.narm$daychar=="Thu"] <- "weekday"
activity.narm$daytype[activity.narm$daychar=="Fri"] <- "weekday"
activity.narm$daytype[activity.narm$daychar=="Sat"] <- "weekend"
activity.narm$daytype[activity.narm$daychar=="Sun"] <- "weekend"
activity.narm$daytype <- as.factor(activity.narm$daytype)
head(activity.narm)
xyplot(activity.narm$steps ~ activity.narm$interval | activity.narm$daytype, data = activity.narm, layout = c(1,2))
xyplot(activity.narm$steps ~ activity.narm$interval | activity.narm$daytype, data = activity.narm, layout = c(1,2), type = "l")
interval.step.mean.across.days.narm <- ddply(activity.narm, .(interval, daytype), summarize, mean = mean(steps))
interval.step.mean.across.days.narm
xyplot(interval.step.mean.across.days.narm$mean ~ ainterval.step.mean.across.days.narm$interval | interval.step.mean.across.days.narm$daytype, data = interval.step.mean.across.days.narm, layout = c(1,2), type = "l")
xyplot(interval.step.mean.across.days.narm$mean ~ interval.step.mean.across.days.narm$interval | interval.step.mean.across.days.narm$daytype, data = interval.step.mean.across.days.narm, layout = c(1,2), type = "l")
